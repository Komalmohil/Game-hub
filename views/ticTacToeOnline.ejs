<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic Tac Toe Online - GameHub</title>
  <link rel="stylesheet" href="/css/ticTacToe.css">
</head>
<body>
<%- include('partials/header', { user: user }) %>

<div class="main" style="display:flex; gap:20px;">

  <div class="users" style="width:200px; background:#f0f0f0; padding:10px; border-radius:8px;">
    <h3>Online Users</h3>
    <ul id="userList"></ul>
  </div>

  <div>
    <h3 id="status">Select a user to start</h3>
    <div class="board" id="board" style="display:grid; grid-template-columns:repeat(3,120px); grid-gap:10px;">
      <% for(let i=0;i<9;i++){ %>
        <div class="cell" data-index="<%= i %>"></div>
      <% } %>
    </div>
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>

<script>
const socket = io();
const username = "<%= user.username %>";
const userListEl = document.getElementById("userList");
const cells = document.querySelectorAll(".cell");

let mySymbol = null;
let roomId = null;
let currentTurn = "X";
let boardState = Array(9).fill("");
let isGameOver = false;

socket.emit("joinLobby", username);

socket.on("updateUsers", users => {
  userListEl.innerHTML = "";
  Object.entries(users).forEach(([id, name]) => {
    if(name === username) return;
    const li = document.createElement("li");
    li.textContent = name;
    li.style.cursor = "pointer";
    li.onclick = () => {
      socket.emit("challenge", id);
    };
    userListEl.appendChild(li);
  });
});

socket.on("assignSymbol", symbol => {
  mySymbol = symbol;
});

socket.on("startGame", data => {
  roomId = data.roomId;
  boardState.fill("");
  cells.forEach(cell => cell.textContent = "");
  isGameOver = false;
  enableBoard();

  const opponentName = Object.entries(data.players)
    .find(([id, sym]) => id !== socket.id)[1];
  document.getElementById("status").innerText = `Playing with ${opponentName}`;
});

cells.forEach(cell => {
  cell.addEventListener("click", () => {
    const idx = parseInt(cell.dataset.index);
    if(isGameOver) return;
    if(boardState[idx] !== "" || mySymbol !== currentTurn) return;

    socket.emit("makeMove", { roomId, idx });
  });
});

socket.on("boardUpdate", ({ idx, symbol }) => {
  boardState[idx] = symbol;
  cells[idx].textContent = symbol;
});

socket.on("updateTurn", turn => {
  currentTurn = turn;
  updateStatus();
});

socket.on("gameOver", ({ winner }) => {
  isGameOver = true;
  disableBoard();

  if(winner === "draw") {
    document.getElementById("status").innerText = "Draw!";
  } else if(winner === mySymbol) {
    document.getElementById("status").innerText = "You win! Opponent loses!";
  } else {
    document.getElementById("status").innerText = "You lose! Opponent wins!";
  }
});

function updateStatus() {
  if(isGameOver) return;
  document.getElementById("status").innerText =
    mySymbol === currentTurn ? "Your turn!" : "Opponent's turn!";
}

function disableBoard() {
  cells.forEach(cell => cell.style.pointerEvents = "none");
}
function enableBoard() {
  cells.forEach(cell => cell.style.pointerEvents = "auto");
}
</script>

</body>
</html>
